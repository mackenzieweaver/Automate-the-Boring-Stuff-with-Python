1. Write an assert statement that triggers an AssertionError if the variable
spam is an integer less than 10.
assert (spam >= 10, 'spam is less than 10')


2. Write an assert statement that triggers an AssertionError if the variables
eggs and bacon contain strings that are the same as each other, even if
their cases are different (that is, 'hello' and 'hello' are considered the
same, and 'goodbye' and 'GOODbye' are also considered the same).
assert (bacon.lower() != eggs.lower(), 'eggs == bacon! That shouldn\'t happen.')


3. Write an assert statement that always triggers an AssertionError.
assert (False, 'I knew it')


4. What are the two lines that your program must have in order to be able
to call logging.debug()?
import logging
logging.basicConfig(level=logging.DEBUG, format=' %(asctime)s - %(levelnames) - %(message)s')


5. What are the two lines that your program must have in order to have
logging.debug() send a logging message to a file named programLog.txt?
import logging
logging.basicConfig(filename='programLog.txt',
		    level=logging.DEBUG,
		    format=' %(asctime)s -
			     %(levelname)s -
			     %(message)s')


6. What are the five logging levels?
DEBUG, INFO, WARNING, ERROR, CRITICAL


7. What line of code can you add to disable all logging messages in your
program?
logging.disable(logging.CRITICAL)


8. Why is using logging messages better than using print() to display the
same message?
Because you can easily disable log messages when you are done debugging.


9. What are the differences between the Step, Over, and Out buttons in
the Debug Control window?
Step - will move the debugger into a function call
Over - quickly execute the function call without stepping into it.
Out - execute the rest of the code until it steps out of the function

10. After you click Go in the Debug Control window, when will the debugger
stop?
At a breakpoint or the end of the program

11. What is a breakpoint?
It's a setting on a line that causes the debugger to pause when it reaches that line

12. How do you set a breakpoint on a line of code in IDLE?
Right click -> Set Breakpoint
